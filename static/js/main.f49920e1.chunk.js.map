{"version":3,"sources":["SidebarOption.js","Sidebar.js","firebase.js","TweetBox.js","Post.js","Feed.js","Widgets.js","App.js","reportWebVitals.js","index.js"],"names":["SidebarOption","active","text","Icon","className","Sidebar","HomeIcon","SearchIcon","NotificationsNoneIcon","MailOutlineIcon","BookmarkBorderIcon","ListAltIcon","PermIdentityIcon","MoreHorizIcon","Button","variant","fullWidth","db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","TweetBox","useState","tweetText","setTweetText","tweetImage","setTweetImage","Avatar","src","value","onChange","e","target","placeholder","type","onClick","preventDefault","collection","add","displayName","userName","verified","image","avatar","Post","forwardRef","ref","alt","width","ChatBubbleOutline","fontSize","FavoriteBorder","Feed","posts","setPosts","useEffect","onSnapshot","snapshot","docs","map","doc","data","post","Widgets","tweetId","sourceType","screenName","options","height","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f49920e1.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./SidebarOption.css\";\n\nconst SidebarOption = ({ active, text, Icon }) => {\n  return (\n    <div className={`sidebarOption ${active && \"sidebarOption--active\"}`}>\n      <Icon className=\"sidebarIcon\" />\n      <h2>{text}</h2>\n    </div>\n  );\n};\n\nexport default SidebarOption;\n","import React from \"react\";\nimport \"./Sidebar.css\";\n// import TwitterIcon from \"@material-ui/icons/Twitter\";\nimport DoubleArrowIcon from \"@material-ui/icons/DoubleArrow\";\nimport SidebarOption from \"./SidebarOption\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport NotificationsNoneIcon from \"@material-ui/icons/NotificationsNone\";\nimport MailOutlineIcon from \"@material-ui/icons/MailOutline\";\nimport BookmarkBorderIcon from \"@material-ui/icons/BookmarkBorder\";\nimport ListAltIcon from \"@material-ui/icons/ListAlt\";\nimport PermIdentityIcon from \"@material-ui/icons/PermIdentity\";\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\nimport { Button } from \"@material-ui/core\";\n\nconst Sidebar = () => {\n  return (\n    <div className=\"sidebar\">\n      {/* Twitter icon */}\n      <DoubleArrowIcon className=\"twitter-icon\" />\n      <SidebarOption active Icon={HomeIcon} text=\"Home\" />\n      <SidebarOption Icon={SearchIcon} text=\"Explore\" />\n      <SidebarOption Icon={NotificationsNoneIcon} text=\"Notifications\" />\n      <SidebarOption Icon={MailOutlineIcon} text=\"Messages\" />\n      <SidebarOption Icon={BookmarkBorderIcon} text=\"Bookmarks\" />\n      <SidebarOption Icon={ListAltIcon} text=\"Lists\" />\n      <SidebarOption Icon={PermIdentityIcon} text=\"Profile\" />\n      <SidebarOption Icon={MoreHorizIcon} text=\"More\" />\n\n      {/* Button 'Tweet' */}\n      <Button variant=\"outlined\" className=\"sidebar-tweet\" fullWidth>\n        Chirp\n      </Button>\n    </div>\n  );\n};\n\nexport default Sidebar;\n","import firebase from \"firebase\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAeilobmMHcqvzBnHf9nJDRfLrzDUF7wwE\",\n  authDomain: \"chirpy-fa91d.firebaseapp.com\",\n  projectId: \"chirpy-fa91d\",\n  storageBucket: \"chirpy-fa91d.appspot.com\",\n  messagingSenderId: \"10117081934\",\n  appId: \"1:10117081934:web:7624281e6427693e588c1f\",\n  measurementId: \"G-ENKHFQ0BR6\",\n};\n\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\n\nconst db = firebaseApp.firestore();\n\nexport default db;\n","import React, { useState } from \"react\";\nimport \"./TweetBox.css\";\nimport { Avatar, Button } from \"@material-ui/core\";\nimport db from \"./firebase\";\n\nconst TweetBox = () => {\n  const [tweetText, setTweetText] = useState(\"\");\n  const [tweetImage, setTweetImage] = useState(\"\");\n\n  const sendTweet = (e) => {\n    e.preventDefault();\n\n    db.collection(\"posts\").add({\n      displayName: \"Guest User\",\n      userName: \"guestuser3000\",\n      verified: false,\n      text: tweetText,\n      image: tweetImage,\n      avatar:\n        \"https://cms.qz.com/wp-content/uploads/2017/03/twitter_egg_blue.png?quality=75&strip=all&w=900&h=900&crop=1\",\n    });\n\n    setTweetText(\"\");\n    setTweetImage(\"\");\n  };\n\n  return (\n    <section className=\"tweetBox\">\n      <form>\n        <div className=\"tweetBox-input\">\n          <Avatar src=\"https://cms.qz.com/wp-content/uploads/2017/03/twitter_egg_blue.png?quality=75&strip=all&w=900&h=900&crop=1\" />\n          <input\n            value={tweetText}\n            onChange={(e) => setTweetText(e.target.value)}\n            placeholder=\"What's happening?\"\n            type=\"text\"\n          ></input>\n        </div>\n        <input\n          value={tweetImage}\n          onChange={(e) => {\n            setTweetImage(e.target.value);\n          }}\n          className=\"tweetBox-img-input\"\n          placeholder=\"Optional: Enter image URL\"\n          type=\"text\"\n        ></input>\n        <Button onClick={sendTweet} type=\"submit\" className=\"tweetBox-btn\">\n          Chirp\n        </Button>\n      </form>\n    </section>\n  );\n};\n\nexport default TweetBox;\n","import React, { forwardRef } from \"react\";\nimport \"./Post.css\";\nimport { Avatar } from \"@material-ui/core\";\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\nimport PublishIcon from \"@material-ui/icons/Publish\";\nimport RepeatIcon from \"@material-ui/icons/Repeat\";\nimport { ChatBubbleOutline, FavoriteBorder } from \"@material-ui/icons\";\n\nconst Post = forwardRef(\n  ({ displayName, userName, verified, text, image, avatar }, ref) => {\n    return (\n      <section className=\"post\" ref={ref}>\n        <div className=\"post-avatar\">\n          <Avatar src={avatar} />\n        </div>\n        <div className=\"post-body\">\n          <div className=\"post-header\">\n            <div className=\"header-text\">\n              <h3>\n                {displayName}{\" \"}\n                {/* <span className=\"header-special\">\n                  {verified && <CheckCircleIcon className=\"check-icon\" />}@\n                  {userName}\n                </span> */}\n              </h3>\n              <h3 className=\"header-special\">\n                {verified && <CheckCircleIcon className=\"check-icon\" />}@\n                {userName}\n              </h3>\n            </div>\n            <div className=\"post-body-text\">\n              <p>{text}</p>\n            </div>\n          </div>\n          <img src={image} alt=\"\" width=\"400px\" />\n          <div className=\"post-footer\">\n            <ChatBubbleOutline fontSize=\"small\" />\n            <RepeatIcon fontSize=\"small\" />\n            <FavoriteBorder fontSize=\"small\" />\n            <PublishIcon fontSize=\"small\" />\n          </div>\n        </div>\n      </section>\n    );\n  }\n);\n\nexport default Post;\n","import React, { useState, useEffect } from \"react\";\nimport \"./Feed.css\";\nimport TweetBox from \"./TweetBox\";\nimport Post from \"./Post\";\nimport db from \"./firebase\";\nimport FlipMove from \"react-flip-move\";\n\nconst Feed = () => {\n  const [posts, setPosts] = useState([]);\n\n  useEffect(() => {\n    db.collection(\"posts\").onSnapshot((snapshot) =>\n      setPosts(snapshot.docs.map((doc) => doc.data()))\n    );\n  }, []);\n\n  return (\n    <section className=\"feed\">\n      {/* Header */}\n      <section className=\"feed-header\">\n        <h2>Home</h2>\n      </section>\n\n      {/* TweetBox */}\n      <TweetBox />\n\n      <FlipMove>\n        {posts.map((post) => (\n          <Post\n            key={post.text}\n            displayName={post.displayName}\n            userName={post.userName}\n            verified={post.verified}\n            text={post.text}\n            avatar={post.avatar}\n            image={post.image}\n          />\n        ))}\n      </FlipMove>\n    </section>\n  );\n};\n\nexport default Feed;\n","import React from \"react\";\nimport \"./Widgets.css\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport { TwitterTimelineEmbed, TwitterTweetEmbed } from \"react-twitter-embed\";\n\nconst Widgets = () => {\n  return (\n    <section className=\"widgets\">\n      <div className=\"widgets-input\">\n        <SearchIcon className=\"widgets-search-icon\" />\n        <input placeholder=\"Search Chirpy\" type=\"text\" />\n      </div>\n\n      <div className=\"widgets-container\">\n        <h2>What's happening</h2>\n\n        <TwitterTweetEmbed tweetId={\"1352535221426597889\"} />\n\n        <TwitterTimelineEmbed\n          sourceType=\"profile\"\n          screenName=\"strtmack\"\n          options={{ height: 400 }}\n        />\n      </div>\n    </section>\n  );\n};\n\nexport default Widgets;\n","import React from \"react\";\nimport \"./App.css\";\nimport Sidebar from \"./Sidebar\";\nimport Feed from \"./Feed\";\nimport Widgets from \"./Widgets\";\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Sidebar />\n      <Feed />\n      <Widgets />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}